<%# CSS da Página %>
<%- contentFor('style') %>
<link rel="stylesheet" type="text/css" href="/stylesheets/userProfileEdit.css" />

<%# Corpo da Página %>
<%- contentFor('main') %>
<div class="info-bg">
  <div class="info">
    <svg width="104" height="104" style="padding: 20px 10px">
      <circle fill="#02b4df" r="50" cx="52" cy="52" />
      <text x="54" y="68" text-anchor="middle" stroke="#ffffff" stroke-width="1.5px" fill="#ffffff"
        font-family="Source Sans Pro, sans-serif" font-size="48px">
        <%= user.name.slice(0,1) %>
      </text>
    </svg>
    <div class="info-block">
      <h1 class="font-user-name"><%= user.name %><span class="font-user-date">Membro desde agosto de 2020</span></h1>
      <div class="avaliation">
        <div class="container-avaliation">
          <svg width="49" height="49">
            <circle fill="#081C22" stroke="transparent" r="24" cx="24" cy="24" />
            <div class="chart" id="graph" data-percent="<%= mean.filme %>">
              <text x="24" y="28" text-anchor="middle" stroke-width="1px" style="position: absolute;
                        color: #ffffff;
                        left: 24px; top: 13px;font-size: 16px" font-family="Source Sans Pro, sans-serif"
                font-size="16px">
                <%= mean.filme %>
              </text>
            </div>
          </svg>
          <h1 class="font-user-avaliation">
            Avaliação Média de Filmes
          </h1>
        </div>
        <div class="container-avaliation">
          <svg width="49" height="49">
            <circle fill="#081C22" stroke="transparent" r="24" cx="24" cy="24" />
            <div class="chart" id="graph2" data-percent="<%= mean.serie %>">
              <text x="24" y="28" text-anchor="middle" stroke-width="1px" style="position: absolute;
                        color: #ffffff;
                        left: 24px; top: 13px;font-size: 16px" font-family="Source Sans Pro, sans-serif"
                font-size="16px">
                <%= mean.serie %>
              </text>
            </div>
          </svg>
          <h1 class="font-user-avaliation">Avaliação Média de Séries</h1>
        </div>
        <div class="container-avaliation" style="border: none">
          <svg width="49" height="49">
            <circle fill="#081C22" stroke="transparent" r="24" cx="24" cy="24" />
            <div class="chart" id="graph3" data-percent="<%= mean.animacao %>">
              <text x="24" y="28" text-anchor="middle" stroke-width="1px" style="position: absolute;
                        color: #ffffff;
                        left: 24px; top: 13px;font-size: 16px" font-family="Source Sans Pro, sans-serif"
                font-size="16px">
                <%= mean.animacao %>
              </text>
            </div>
          </svg>
          <h1 class="font-user-avaliation">Avaliação Média de Animes</h1>
        </div>
      </div>
    </div>
  </div>
</div>
<div class="content-form">
  <div class="title-wrapper">
    <h1 class="title">Alterar Dados</h1>
    <p>Preecha o seu cadastro com as novas informações.</p>
  </div>
  <form method="post" id="registrationForm">
    <fieldset>
      <% if(notification) { %>
      <div class="alert-success" role="alert">
        <img src="/images/check-circle.svg">
        <span>Perfil atualizado com sucesso!</span>
      </div>
      <% } %>
      <div class="field-wrapper">
        <label for="name">Nome</label><br>
        <input type="text" minlength="4" maxlength="50" name="name" id="name" placeholder="<%= user.name %>"
          value="<%= user.name %>" required />
        <span class="erro-msg" id="name-erro"><%= erros.name %> </span>
      </div>
      <div class="field-wrapper">
        <label for="password">Senha anterior</label><br>
        <input type="password" minlength="1" maxlength="50" name="password_old" id="password-old" required />
        <span class="erro-msg" id="password-old-erro"><%= erros.password_old %></span>
      </div>
      <div class="field-wrapper">
        <label for="password">Nova senha (8 caractéres no mínimo)</label><br>
        <input type="password" minlength="8" maxlength="50" name="password" id="password" required />
        <span class="erro-msg" id="password-erro"><%= erros.password %></span>
      </div>
      <div class="field-wrapper">
        <label for="password-confirm">Confirme sua nova senha</label><br>
        <input type="password" minlength="8" maxlength="50" name="password_confirm" id="password-confirm" required />
        <span class="erro-msg" id="password-confirm-erro"><%= erros.password_confirm %></span>
      </div>
      <div class="field-wrapper">
        <label for="email">E-mail</label><br>
        <input type="email" name="email" id="email" placeholder="<%= user.email %>" value="<%= user.email %>"
          required />
        <span class="erro-msg" id="email-erro"><%= erros.email %></span>
      </div>
    </fieldset>
    <input class="btn-submit" type="submit" value="Salvar">
  </form>
</div>

<%# Script do validador do formualário %>
<script type="text/javascript">
  // Valida o formulário antes de enviar
  const registrationForm = document.querySelector('form#registrationForm');
  registrationForm.addEventListener('submit', (e) => {
    if (!nameValidator() || !passwordValidator() || !passwordConfirmValidator() || !emailValidator()) {
      e.preventDefault();
    }
  });
  // Verificação o campo name
  const name = document.querySelector("input#name");
  name.addEventListener('blur', () => {
    nameValidator();
  });
  // Remove mensagem de erro
  name.addEventListener('focus', () => {
    document.querySelector("span#name-erro").innerHTML = '';
  });
  // Remove mensagem de erro
  passwordOld.addEventListener('focus', () => {
    document.querySelector("span#password-old-erro").innerHTML = '';
  });
  // Verificação o campo password
  const password = document.querySelector("input#password");
  password.addEventListener('blur', () => {
    passwordValidator();
    passwordConfirmValidator();
  });
  // Remove mensagem de erro
  password.addEventListener('focus', () => {
    document.querySelector("span#password-erro").innerHTML = '';
  });
  // Valida a senha de confirmação
  const passwordConfirm = document.querySelector("input#password-confirm");
  passwordConfirm.addEventListener('blur', () => {
    passwordValidator();
    passwordConfirmValidator();
  });
  // Remove mensagem de erro
  passwordConfirm.addEventListener('focus', () => {
    document.querySelector("span#password-confirm-erro").innerHTML = '';
  });
  // Verificação o campo de e-mail
  const email = document.querySelector("input#email");
  email.addEventListener('blur', () => {
    emailValidator();
  });
  // Remove mensagem de erro
  email.addEventListener('focus', () => {
    document.querySelector("span#email-erro").innerHTML = '';
  });
  function nameValidator() {
    if (name.value.length < 4) {
      document.querySelector("span#name-erro").innerHTML = 'Nome deve conter pelo menos 4 caractéres!';
      return false;
    }
    else {
      return true;
    }
  }
  function emailValidator() {
    const emailRegexp = new RegExp("^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$");
    if (emailRegexp.test(email.value)) {
      return true;
    }
    else {
      document.querySelector("span#email-erro").innerHTML = 'Endereço de e-mail inválido!';
      return false;
    }
  }
  function passwordValidator() {
    const passwordRegexp = new RegExp("^[-!#$@%&'*+/0-9=?A-Z^_`a-z{|}~\(\)]{8,}$");
    if (!passwordRegexp.test(password.value)) {
      document.querySelector("span#password-erro").innerHTML = 'A senha deve conter pelo menos 8 caractéres sem espaçamento!';
      return false;
    }
    else {
      return true;
    }
  }
  function passwordConfirmValidator() {
    if (passwordConfirm.value != password.value) {
      document.querySelector("span#password-confirm-erro").innerHTML = 'As senhas não são iguais!';
      return false;
    }
    else {
      document.querySelector("span#password-confirm-erro").innerHTML = '';
      return true;
    }
  }
</script>
<%# Script de notificação%>
<% if(notification) { %>
<script type="text/javascript">
  window.setTimeout(() => {
    const hint = document.querySelector("div.alert-success");
    hint.style.maxHeight = '0';
    hint.style.visibility = 'hidden';
  }, 5000);
</script>
<% } %>
<script type="text/javascript">
  var el = document.getElementById('graph'); // get canvas
  var el2 = document.getElementById('graph2');
  var el3 = document.getElementById('graph3');
  var options = {
    percent: el.getAttribute('data-percent') || 25,
    size: el.getAttribute('data-size') || 48,
    lineWidth: el.getAttribute('data-line') || 4,
    rotate: el.getAttribute('data-rotate') || 0
  }
  var options2 = {
    percent: el2.getAttribute('data-percent') || 25,
    size: el2.getAttribute('data-size') || 48,
    lineWidth: el2.getAttribute('data-line') || 4,
    rotate: el2.getAttribute('data-rotate') || 0
  }
  var options3 = {
    percent: el3.getAttribute('data-percent') || 25,
    size: el3.getAttribute('data-size') || 48,
    lineWidth: el3.getAttribute('data-line') || 4,
    rotate: el3.getAttribute('data-rotate') || 0
  }
  var canvas = document.createElement('canvas');
  var canvas2 = document.createElement('canvas');
  var canvas3 = document.createElement('canvas');
  if (typeof (G_vmlCanvasManager) !== 'undefined') {
    G_vmlCanvasManager.initElement(canvas);
  }
  if (typeof (G_vmlCanvasManager) !== 'undefined') {
    G_vmlCanvasManager.initElement(canvas2);
  }
  if (typeof (G_vmlCanvasManager) !== 'undefined') {
    G_vmlCanvasManager.initElement(canvas3);
  }
  var ctx = canvas.getContext('2d');
  canvas.width = canvas.height = options.size;
  var ctx2 = canvas2.getContext('2d');
  canvas2.width = canvas2.height = options2.size;
  var ctx3 = canvas3.getContext('2d');
  canvas3.width = canvas3.height = options3.size;
  el.appendChild(canvas);
  el2.appendChild(canvas2);
  el3.appendChild(canvas3);
  ctx.translate(options.size / 2, options.size / 2); // change center
  ctx.rotate((-1 / 2 + options.rotate / 180) * Math.PI); // rotate -90 deg
  ctx2.translate(options2.size / 2, options2.size / 2); // change center
  ctx2.rotate((-1 / 2 + options2.rotate / 180) * Math.PI); // rotate -90 deg
  ctx3.translate(options3.size / 2, options3.size / 2); // change center
  ctx3.rotate((-1 / 2 + options3.rotate / 180) * Math.PI); // rotate -90 deg
  //imd = ctx.getImageData(0, 0, 240, 240);
  var radius = (options.size - options.lineWidth) / 2;
  var radius2 = (options2.size - options2.lineWidth) / 2;
  var radius3 = (options3.size - options3.lineWidth) / 2;
  var drawCircle = function (color, lineWidth, percent) {
    percent = Math.min(Math.max(0, percent || 1), 1);
    ctx.beginPath();
    ctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, false);
    ctx.strokeStyle = color;
    ctx.lineCap = 'round'; // butt, round or square
    ctx.lineWidth = lineWidth
    ctx.stroke();
  };
  var drawCircle2 = function (color, lineWidth, percent) {
    percent = Math.min(Math.max(0, percent || 1), 1);
    ctx2.beginPath();
    ctx2.arc(0, 0, radius2, 0, Math.PI * 2 * percent, false);
    ctx2.strokeStyle = color;
    ctx2.lineCap = 'round'; // butt, round or square
    ctx2.lineWidth = lineWidth
    ctx2.stroke();
  };
  var drawCircle3 = function (color, lineWidth, percent) {
    percent = Math.min(Math.max(0, percent || 1), 1);
    ctx3.beginPath();
    ctx3.arc(0, 0, radius3, 0, Math.PI * 2 * percent, false);
    ctx3.strokeStyle = color;
    ctx3.lineCap = 'round'; // butt, round or square
    ctx3.lineWidth = lineWidth
    ctx3.stroke();
  };
  drawCircle('#1C4027', options.lineWidth, 100 / 100);
  drawCircle('#13f513', options.lineWidth, options.percent / 10);
  drawCircle2('#1C4027', options2.lineWidth, 100 / 100);
  drawCircle2('#13f513', options2.lineWidth, options2.percent / 10);
  drawCircle3('#1C4027', options3.lineWidth, 100 / 100);
  drawCircle3('#13f513', options3.lineWidth, options3.percent / 10);
</script>